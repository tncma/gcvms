<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	<!-- context -->
	<context:component-scan base-package="com.cma.gcvms">
		<!-- exclude web beans as they live in the web application context -->
		<!-- Note: this regexp does not work if you try to escape the '.' -->
		<context:exclude-filter type="regex" expression="com.cma.gcvms.web.*" />
	</context:component-scan>
	<context:property-placeholder location="classpath*:database.properties,classpath*:hibernate.properties,classpath*:app-version.properties" />

	<!-- security -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userDetailsService" />
	</security:authentication-manager>
	<security:global-method-security jsr250-annotations="enabled" pre-post-annotations="enabled" />

	<!-- task -->
	<task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
	<task:executor id="myExecutor" pool-size="5" />
	<task:scheduler id="myScheduler" pool-size="10" />

	<!-- transaction -->
	<tx:annotation-driven />

	<!-- datasource -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" 
		destroy-method="close" 
		lazy-init="false" 
		p:driverClassName="${jdbc.driver}"
		p:url="${jdbc.url}"
		p:username="${jdbc.user}" 
		p:password="${jdbc.password}" 
		p:initialSize="1" 
		p:maxActive="50" 
		p:maxIdle="1" 
		p:maxWait="1000" 
		p:defaultAutoCommit="false" 
		p:removeAbandoned="true" 
		p:removeAbandonedTimeout="60">
		<description><![CDATA[
			Simple datasource. This is a direct access to the datasource that can be used for specific queries that need to bypass JPA functionalities.
			However, if you need to use JDBC, please look at hibernate SQL-QUERIES, they would most probably be a more elegant way to solve your problem.
		]]></description>
	</bean>
</beans>
