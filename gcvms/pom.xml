<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cma.gcvms</groupId>
	<artifactId>gcvms</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>gcvms</name>
	<properties>
		<!-- ~~~~~~~~ -->
		<!-- Database -->
		<!-- ~~~~~~~~ -->
		<!-- Note: during development using the same value for your login, password, 
			database name and project name is really convenient -->
		<database.name>${project.name}</database.name>
		<database.host>localhost</database.host>
		<database.user>${project.name}</database.user>
		<database.password>${project.name}</database.password>
		<!-- Default values when no database profile is set -->
		<!-- jdbc driver dependency -->
		<jdbc.groupId>org.hsqldb</jdbc.groupId>
		<jdbc.artifactId>hsqldb</jdbc.artifactId>
		<jdbc.version>2.2.9</jdbc.version>

		<!-- jdbc settings -->
		<jdbc.type>hsqldb</jdbc.type>
		<jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
		<jdbc.url>jdbc:hsqldb:hsql://localhost/cmadb</jdbc.url>
		<jdbc.user>cmadbadmin</jdbc.user>
		<jdbc.password>dbpwd</jdbc.password>
		<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
		<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
		<!-- ~~~~~~ -->
		<!-- System -->
		<!-- ~~~~~~ -->
		<jdk.version>1.6</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Version dependencies when used in multiple dependencies -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<maven-celerio-plugin.outputDir>${project.basedir}</maven-celerio-plugin.outputDir>
		<maven-celerio-plugin.version>3.0.107</maven-celerio-plugin.version>
		<hibernate.version>4.2.6.Final</hibernate.version>
		<spring.version>3.2.4.RELEASE</spring.version>
		<spring-security.version>3.1.4.RELEASE</spring-security.version>
		<jsf-api.version>2.1.24</jsf-api.version>
		<primefaces.version>4.0</primefaces.version>
		<primefaces-themes.version>1.0.10</primefaces-themes.version>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Variables substituted in resources file at build time -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<application.name>${project.name}</application.name>
		<application.version>${project.version}</application.version>
		<application.description>${project.description}</application.description>
		<!-- host port where the application will be deployed -->
		<application.host>localhost</application.host>
		<application.port>8080</application.port>
		<application.contextpath>/gcvms</application.contextpath>
		<!-- logs -->
		<log.target>${project.build.directory}/logs</log.target>
		<log.level>DEBUG</log.level>
		<log.sql.queries.level>DEBUG</log.sql.queries.level>
		<!-- hibernate, see by src/main/resource/hibernate.properties -->
		<hibernate.show.sql>true</hibernate.show.sql>
		<hibernate.format.sql>true</hibernate.format.sql>
		<hibernate.generate_statistics>true</hibernate.generate_statistics>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>
		<hibernate.ehcache.configuration.file>ehcache.xml</hibernate.ehcache.configuration.file>
		<hibernate.use.second.level.cache>true</hibernate.use.second.level.cache>
		<hibernate.use.query.cache>true</hibernate.use.query.cache>
		<!-- ~~~~~ -->
		<!-- Sonar -->
		<!-- ~~~~~ -->
		<!-- force sonar to use jacoco -->
		<!-- <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin> -->
		<!-- property checked by sonar to locate jacoco UT/IT reports -->
		<!-- <sonar.jacoco.reportPath>${project.build.directory}/jacoco-test.exec</sonar.jacoco.reportPath> 
			<sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath> -->
		<!-- tell sonar to reuse existing reports -->
		<!-- When using multi-modules, move this property to root package -->
		<!-- <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis> -->
	</properties>
	<developers>
		<developer>
			<name>SpringFuse</name>
			<email>info@springfuse.com</email>
			<organization>Springfuse</organization>
			<organizationUrl>http://www.springfuse.com</organizationUrl>
		</developer>
	</developers>
	<profiles>
		<profile>
			<id>mysql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
				<jdbc.version>5.1.25</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>mysql</jdbc.type>
				<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
				<!-- see http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-configuration-properties.html -->
				<jdbc.url>jdbc:mysql://${database.host}/${database.name}?zeroDateTimeBehavior=convertToNull</jdbc.url>
				<jdbc.catalog>${database.name}</jdbc.catalog>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>hsql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>org.hsqldb</jdbc.groupId>
				<jdbc.artifactId>hsqldb</jdbc.artifactId>
				<jdbc.version>2.2.9</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>hsqldb</jdbc.type>
				<jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
				<jdbc.url>jdbc:hsqldb:file:${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<!-- Disable debug modes -->
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<id>perf</id>
			<properties>
				<hibernate.show.sql>false</hibernate.show.sql>
				<hibernate.format.sql>false</hibernate.format.sql>
				<hibernate.use_sql_comments>false</hibernate.use_sql_comments>
				<hibernate.generate_statistics>false</hibernate.generate_statistics>
				<log.level>WARN</log.level>
				<log.sql.queries.level>WARN</log.sql.queries.level>
			</properties>
		</profile>
		<!-- convenient profile to drop/create a db user (e.g. Oracle) -->
		<profile>
			<id>create-db-user</id>
			<build>
				<plugins>
					<!-- Execute the scripts -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>create-oracle-user</id>
								<phase>validate</phase>
								<configuration>
									<driver>${jdbc.driver}</driver>
									<url>${jdbc.url}</url>
									<username>system</username>
									<password>manager</password>
									<autocommit>true</autocommit>
									<sqlCommand><![CDATA[
DROP USER ${database.user} CASCADE;
CREATE USER ${database.user} IDENTIFIED BY ${database.password};
GRANT CONNECT, RESOURCE TO ${database.user};
 ]]>
									</sqlCommand>
									<print>true</print>
									<printResultSet>true</printResultSet>
									<onError>continue</onError>
								</configuration>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Drop and recreate the database -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>db</id>
			<build>
				<defaultGoal>initialize</defaultGoal>
				<plugins>
					<plugin>
						<!-- http://mojo.codehaus.org/sql-maven-plugin/ -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>Create and initialize the database</id>
								<phase>initialize</phase>
								<configuration>
									<driver>${jdbc.driver}</driver>
									<url>${jdbc.url}</url>
									<username>${jdbc.user}</username>
									<password>${jdbc.password}</password>
									<autocommit>true</autocommit>
									<encoding>UTF-8</encoding>
									<print>true</print>
									<printResultSet>true</printResultSet>
									<onError>continue</onError>
									<delimiter>${sql-maven-plugin.delimiter}</delimiter>
									<orderFile>ascending</orderFile>
									<fileset>
										<basedir>${project.basedir}</basedir>
										<includes>
											<include>src/main/sql/${jdbc.type}/*.sql</include>
										</includes>
									</fileset>
								</configuration>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profiles below are used when Celerio Maven Plugin is present in the 
			build process -->
		<!-- <profile>
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Extract the database metadata
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			<id>metadata</id>
			<build>
				<defaultGoal>generate-sources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.jaxio.celerio</groupId>
						<artifactId>maven-dbmetadata-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Extract the database schema.</id>
								<goals>
									<goal>extract-metadata</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Generate the code using Celerio
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			<id>gen</id>
			<build>
				<defaultGoal>generate-sources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.jaxio.celerio</groupId>
						<artifactId>maven-celerio-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Generates files using the extracted database schema.</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.jaxio.celerio.packs</groupId>
								<artifactId>backend-jpa</artifactId>
								<version>${maven-celerio-plugin.version}</version>
							</dependency>
							<dependency>
								<groupId>com.jaxio.celerio.packs</groupId>
								<artifactId>jsf2-spring-conversation</artifactId>
								<version>${maven-celerio-plugin.version}</version>
							</dependency>
							<dependency>
								<groupId>com.jaxio.celerio.packs</groupId>
								<artifactId>selenium-primefaces</artifactId>
								<version>${maven-celerio-plugin.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Delete code generated by Celerio
			~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			<id>cleanGen</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.jaxio.celerio</groupId>
						<artifactId>maven-celerio-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Delete previously generated files (use .celerio/ folder)</id>
								<goals>
									<goal>cleanGenerated</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</pluginRepository>
			</pluginRepositories>
		</profile> -->
	</profiles>
	<!-- ~~~~~~~~~~~~ -->
	<!-- DEPENDENCIES -->
	<!-- ~~~~~~~~~~~~ -->
	<dependencies>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- List your specific dependencies below -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Dependencies needed by the generated project -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.core</artifactId>
			<version>3.0.0.GA</version>
		</dependency>
		<!-- ~~~~~~~~~~~ -->
		<!-- PERSISTENCE -->
		<!-- ~~~~~~~~~~~ -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.42</version>
		</dependency>
		<dependency>
			<!-- jdbc driver depends on the database profile used -->
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<!-- ~~~~~~~~~~~~~~~~ -->
		<!-- HIBERNATE SEARCH -->
		<!-- ~~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<version>4.3.0.Final</version>
			<exclusions>
				<exclusion>
					<artifactId>lucene-kuromoji</artifactId>
					<groupId>org.apache.lucene</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>1.4</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.12</version>
		</dependency>
		<!-- ~~~~~~~~~~ -->
		<!-- VALIDATION -->
		<!-- ~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		<dependency> <!-- validation html -->
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.2</version>
		</dependency>
		<!-- ~~~~~~ -->
		<!-- LOGGER -->
		<!-- ~~~~~~ -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>
		<!-- ~~~~~ -->
		<!-- UTILS -->
		<!-- ~~~~~ -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-jexl</artifactId>
			<version>2.1.1</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<!-- ~~~~~~ -->
		<!-- SPRING -->
		<!-- ~~~~~~ -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.3</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- ~~~~~~~~~~~~~~~ -->
		<!-- SPRING SECURITY -->
		<!-- ~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>

		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- JSF -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>org.jboss.el</groupId>
			<artifactId>jboss-el</artifactId>
			<version>2.0.1.GA</version>
			<exclusions>
				<exclusion>
					<groupId>javax.el</groupId>
					<artifactId>el-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>${jsf-api.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>${jsf-api.version}</version>
		</dependency>
		<!-- to use myfaces, comment the 2 dependencies above and uncomment the 
			2 below ... review web.xml as well, you need to comment out something there 
			too. -->
		<!-- <dependency> -->
		<!-- <groupId>org.apache.myfaces.core</groupId> -->
		<!-- <artifactId>myfaces-api</artifactId> -->
		<!-- <version>2.1.10</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.apache.myfaces.core</groupId> -->
		<!-- <artifactId>myfaces-impl</artifactId> -->
		<!-- <version>2.1.10</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>${primefaces.version}</version>
		</dependency>
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-web</artifactId>
			<version>2.0.4</version>
		</dependency>
		<dependency><!-- optional theme (see also web.xml to enable it) -->
			<groupId>org.primefaces.themes</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${primefaces-themes.version}</version>
		</dependency>
		<!-- ~~~ -->
		<!-- WEB -->
		<!-- ~~~ -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>
		<!-- ~~~~~~~~~~ -->
		<!-- MONITORING -->
		<!-- ~~~~~~~~~~ -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>1.47.0</version>
		</dependency>
		<!-- ~~~~ -->
		<!-- TEST -->
		<!-- ~~~~ -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.palominolabs.xpath</groupId>
			<artifactId>xpath-utils</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<!-- ~~~~~~~~~~~~ -->
	<!-- REPOSITORIES -->
	<!-- ~~~~~~~~~~~~ -->
	<repositories>
		<repository>
			<id>primefaces</id>
			<url>http://repository.primefaces.org</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!-- ~~~~~ -->
	<!-- BUILD -->
	<!-- ~~~~~ -->
	<build>
		<defaultGoal>jetty:run</defaultGoal>
		<resources>
			<resource>
				<directory>${maven-celerio-plugin.outputDir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${maven-celerio-plugin.outputDir}/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<delimiters>
						<delimiter>@*@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>xls</nonFilteredFileExtension>
						<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
			<!-- <plugin> http://maven.apache.org/plugins/maven-enforcer-plugin/ <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-enforcer-plugin</artifactId> <version>1.1.1</version> <executions> 
				<execution> <id>enforce-java</id> <goals> <goal>enforce</goal> </goals> <configuration> 
				<rules> <requireJavaVersion> <version>[1.6.0-45,)</version> </requireJavaVersion> 
				<requireMavenVersion> <version>3.0.3</version> </requireMavenVersion> </rules> 
				</configuration> </execution> </executions> </plugin> -->
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<compilerArgument>-Xlint</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/build-helper-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>Adding generated java folder to build</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${maven-celerio-plugin.outputDir}/src/main/java</source>
								<source>${maven-celerio-plugin.outputDir}/src/main/generated-java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>Adding generated java test location to test build</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${maven-celerio-plugin.outputDir}/src/test/java</source>
								<source>${maven-celerio-plugin.outputDir}/src/test/generated-java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://wiki.eclipse.org/Jetty/Feature/Jetty_Maven_Plugin -->
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.10.v20130312</version>
				<configuration>
					<stopKey>foo</stopKey>
					<stopPort>9999</stopPort>
					<webAppConfig>
						<contextPath>${application.contextpath}</contextPath>
						<overrideDescriptor>${maven-celerio-plugin.outputDir}/src/main/config/maven-jetty-plugin/web-development.xml</overrideDescriptor>
						<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
							<resourcesAsCSV>${project.basedir}/src/main/webapp/,${maven-celerio-plugin.outputDir}/src/main/webapp/</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>${application.port}</port>
						</connector>
					</connectors>
					<requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
						<filename>${log.target}/jetty-yyyy_mm_dd-request.log</filename>
						<retainDays>3</retainDays>
						<append>true</append>
						<extended>false</extended>
						<logTimeZone>GMT</logTimeZone>
					</requestLog>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-failsafe-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<systemPropertyVariables>
						<selenium.baseurl>http://${application.host}:${application.port}${application.contextpath}</selenium.baseurl>
					</systemPropertyVariables>
					<argLine>${jacoco.it.agent.argLine}</argLine>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.jacoco</groupId> <artifactId>jacoco-maven-plugin</artifactId> 
				<version>0.6.2.201302030002</version> <executions> <execution> <id>prepare-jacoco-test-agent</id> 
				<goals> <goal>prepare-agent</goal> </goals> <phase>process-test-classes</phase> 
				<configuration> <propertyName>jacoco.test.agent.argLine</propertyName> <destFile>${sonar.jacoco.reportPath}</destFile> 
				</configuration> </execution> <execution> <id>prepare-jacoco-integration-agent</id> 
				<goals> <goal>prepare-agent</goal> </goals> <phase>pre-integration-test</phase> 
				<configuration> <propertyName>jacoco.it.agent.argLine</propertyName> <destFile>${sonar.jacoco.itReportPath}</destFile> 
				</configuration> </execution> </executions> </plugin> -->
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-idea-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<jdkLevel>${jdk.version}</jdkLevel>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-eclipse-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-war-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webResources>
						<resource>
							<directory>${maven-celerio-plugin.outputDir}/src/main/webapp</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-install-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-clean-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-surefire-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<!-- surefire uses a new jvm, MAVEN_OPTS are ignored, so you better 
						set the memory options here -->
					<argLine>-Xmx512m -XX:MaxPermSize=256m ${jacoco.test.agent.argLine}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-release-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<arguments>-Pdb,metadata,gen</arguments>
					<releaseProfiles>db,metadata,gen</releaseProfiles>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.6.2.201302030002,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
